---
- name: Création de la base de donnée
  community.docker.docker_container:
    name: pdns-db
    image: mysql:8.0.33
    networks:
      - name: net-1
        ipv4_address: "{{ dns_db_ip_address }}"
    volumes:
      - "{{ pdns_db_data_path }}:/var/lib/mysql"
    env:
      MYSQL_ROOT_PASSWORD: "{{ pdns_db_password }}"

- name: Création du dossier configs
  ansible.builtin.file:
    state: directory
    path: "{{ dst_config_path }}"
    mode: '0744'

- name: Création de la config
  ansible.builtin.template:
    src: "../templates/pdns.conf.j2"
    dest: "{{ dst_config_path }}/pdns.conf"
    mode: '0644'

- name: Création de la config du reverse proxy
  ansible.builtin.template:
    src: "../templates/dns.traefik.yml.j2"
    dest: "{{ traefik_config_path }}/pdns.traefik.yml"
    mode: '0644'

- name: Création du conteneur PowerDNS
  community.docker.docker_container:
    name: pdns
    image: psitrax/powerdns:v4.4.1
    networks:
      - name: net-1
        ipv4_address: "{{ dns_ip_address }}"
    volumes:
      - "{{ dst_config_path | realpath }}/pdns.conf:/etc/pdns/conf.d/pdns.conf:ro"
    env:
      MYSQL_USER: root
      MYSQL_PASS: "{{ pdns_db_password }}"
      MYSQL_HOST: "{{ dns_db_ip_address }}"
      MYSQL_PORT: "3306"

- name: Attente du serveur
  ansible.builtin.pause:
    seconds: 5

- name: Création des ressources DNS par défaut
  ansible.builtin.command: >
    docker run --rm --net net-1 curlimages/curl
    -H "X-Api-Key: {{ pdns_api_key }}"
    -H "Content-Type: application/json"
    -H "Accept: application/json"
    -X POST
    -d '{
      "name": "internal.",
      "kind": "Native",
      "dnssec": false,
      "soa-edit": "INCEPTION-INCREMENT",
      "nameservers": ["ns1.dns.internal."]
    }'
    http://{{ dns_ip_address }}:8080/api/v1/servers/localhost/zones

- name: Création des ressources DNS par défaut
  ansible.builtin.command: >
    docker run --rm --net net-1 curlimages/curl
    -H "X-Api-Key: {{ pdns_api_key }}"
    -H "Content-Type: application/json"
    -H "Accept: application/json"
    -X PATCH
    -d '{
      "rrsets": [
        {
          "name": "internal.",
          "type": "SOA",
          "ttl": 3600,
          "changetype": "REPLACE",
          "records": [{"content": "ns1.dns.internal. admin.dns.internal. 0 10800 3600 604800 3600", "disabled": false}]
        },
        {
          "name": "internal.",
          "type": "NS",
          "ttl": 3600,
          "changetype": "REPLACE",
          "records": [{"content": "ns1.dns.internal.", "disabled": false}]
        },
        {
          "name": "ns1.dns.internal.",
          "type": "A",
          "ttl": 300,
          "changetype": "REPLACE",
          "records": [{"content": "127.0.0.1", "disabled": false}]
        },
        {
          "name": "ns1.dns.internal.",
          "type": "AAAA",
          "ttl": 300,
          "changetype": "REPLACE",
          "records": [{"content": "::1", "disabled": false}]
        },
        {
          "name": "{{ dns_api_host_name }}.",
          "type": "A",
          "ttl": 300,
          "changetype": "REPLACE",
          "records": [{"content": "127.0.0.1", "disabled": false}]
        },
        {
          "name": "{{ dns_api_host_name }}.",
          "type": "AAAA",
          "ttl": 300,
          "changetype": "REPLACE",
          "records": [{"content": "::1", "disabled": false}]
        },
        {
          "name": "{{ dns_admin_host_name }}.",
          "type": "A",
          "ttl": 300,
          "changetype": "REPLACE",
          "records": [{"content": "127.0.0.1", "disabled": false}]
        },
        {
          "name": "{{ dns_admin_host_name }}.",
          "type": "AAAA",
          "ttl": 300,
          "changetype": "REPLACE",
          "records": [{"content": "::1", "disabled": false}]
        }
      ]
    }'
    http://{{ dns_ip_address }}:8080/api/v1/servers/localhost/zones/internal.

- name: Création du conteneur de l'interface
  community.docker.docker_container:
    name: pdns-admin
    image: ngoduykhanh/powerdns-admin:0.3.0
    networks:
      - name: net-1
        ipv4_address: "{{ dns_admin_ip_address }}"
    env:
      SECRET_KEY: "{{ pdns_admin_secret_key }}"
